//----------------------------------------OS Startup Module-----------------------------------

//load MOD_5
loadi(50,63);
loadi(51,64);

//load MOD_7
loadi(54,67);
loadi(55,68);

//load idle process
loadi(69,11);

SP = 76 * 512 - 1;
call BOOT_MODULE;

//--------------------IDLE Process------------------------
PTBR = PAGE_TABLE_BASE;
PTLR = 10;

//library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//heap
[PTBR + 4] = -1;
[PTBR + 5] = "0000";
[PTBR + 6] = -1;
[PTBR + 7] = "0000";

//code
[PTBR + 8] = 69;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0000";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//stack
[PTBR + 16] = 70;
[PTBR + 17] = "0110";
[PTBR + 18] = -1;
[PTBR + 19] = "0000";

//tick
[PROCESS_TABLE] = 0;
//pid
[PROCESS_TABLE + 1] = 0;
//userid
[PROCESS_TABLE + 3] = 0;
//state
[PROCESS_TABLE + 4] = RUNNING;
//user area page number
[PROCESS_TABLE + 11] = 76;
//kernel stack pointer
[PROCESS_TABLE + 12] = 0;
//user stack pointer
[PROCESS_TABLE + 13] = 8 * 512;
//ptbr
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
//ptlr
[PROCESS_TABLE + 15] = 10;
[70 * 512] = [69 * 512 + 1];
//--------------------------------------------------------

//-----------------------Swapper Daemon-------------------
PTBR = PAGE_TABLE_BASE + (20 * 15);
PTLR = 10;

//library
[PTBR + 0] = -1;
[PTBR + 1] = "0000";
[PTBR + 2] = -1;
[PTBR + 3] = "0000";

//heap
[PTBR + 4] = -1;
[PTBR + 5] = "0000";
[PTBR + 6] = -1;
[PTBR + 7] = "0000";

//code
[PTBR + 8] = 69;	//share code page of idle process
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0000";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//stack
[PTBR + 16] = 81;
[PTBR + 17] = "0110";
[PTBR + 18] = -1;
[PTBR + 19] = "0000";

//set PROCESS_TABLE details
//tick
[PROCESS_TABLE + 240] = 0;
//pid
[PROCESS_TABLE + 241] = 15;
//userid
[PROCESS_TABLE + 243] = 0;
//state
[PROCESS_TABLE + 244] = CREATED;
//user area page number
[PROCESS_TABLE + 251] = 82;
//kernel stack pointer
[PROCESS_TABLE + 252] = 0;
//user stack pointer
[PROCESS_TABLE + 253] = 8 * 512;
//ptbr
[PROCESS_TABLE + 254] = PTBR;
//ptlr
[PROCESS_TABLE + 255] = 10;
[81 * 512] = [69 * 512 + 1];
//--------------------------------------------------------

//first process in user mode -> idle
[SYSTEM_STATUS_TABLE + 1] = 0;
PTBR = PAGE_TABLE_BASE;
PTLR = 10;
SP = 8 * 512;

ireturn;
