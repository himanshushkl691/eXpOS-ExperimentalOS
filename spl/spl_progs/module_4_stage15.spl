//------------------------DEVICE MANAGER MODULE------------------
alias funcNum R1;
alias currPID R2;
//R1 --> function Name
//R2 --> PID of curr_proc
//R3 --> content/address

//-----Terminal Write function-----
if(funcNum == 3) then

	//-------CALLING ACQUIRE TERMINAL------
	backup;
	R1 = 8;	//set R1 to 8 for acquiring terminal
	R2 = [SYSTEM_STATUS_TABLE + 1];	//set R2 to PID of curr_proc
	call MOD_0;	//call resource manager module
	restore;
	print R3;
	//------------------------------------

	//------CALLING RELEASE TERMINAL-----
	backup;
	R1 = 9;	//set R1 to 9 for releasing terminal
	R2 = [SYSTEM_STATUS_TABLE+1];
	call MOD_0;	//call resource manager module
	restore;
	//-----------------------------------
	return;
endif;
//--------------------------------

//-----Terminal Read function------
if(funcNum == 4) then

	//------CALLING ACQUIRE TERMINAL-------
	backup;
	R1 = 8;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_0;
	restore;
	read;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] = WAIT_TERMINAL;
	//-------------------------------------

	//-----CONTEXT SWITCH------------------
	multipush(R0,R1,R2,R3,R4,R5,R6);
	call MOD_5;
	multipop(R0,R1,R2,R3,R4,R5,R6);
	[[PTBR + 2 * ((R3) / 512)] * 512 + ((R3) % 512)] = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 8];
	//-------------------------------------
	return;
endif;
return;
//---------------------------------

//---------------------------------------------------------------
