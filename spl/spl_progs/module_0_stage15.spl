//-------------RESOURCE MANAGER MODULE-----------
alias funcNum R1;
alias currPID R2;

//------------ACQUIRING TERMINAL---------
if(funcNum == ACQUIRE_TERMINAL) then
	
	//-------wait till terminal is released------
	while(([TERMINAL_STATUS_TABLE]) == 1) do
		[PROCESS_TABLE+(currPID*16)+4]=WAIT_TERMINAL;
		backup;
		call MOD_5;			//call scheduler
		restore;
	endwhile;
	//------------------------------------------

	[TERMINAL_STATUS_TABLE]=1;		//lock terminal
	[TERMINAL_STATUS_TABLE+1]=currPID;	//set PID field in terminal_status_table
	return;
endif;
//--------------------------------------

//----------RELEASING TERMINAL----------
if(funcNum == RELEASE_TERMINAL) then
	if(currPID != [TERMINAL_STATUS_TABLE+1]) then
		R0 = -1;
		return;
	else
		[TERMINAL_STATUS_TABLE]=0;	//terminal released
		alias i R4;
		i = 0;
		//wake up all process having state WAIT_TERMINAL
		while(i < 16) do
			if([PROCESS_TABLE+(i*16)+4] == WAIT_TERMINAL) then
				[PROCESS_TABLE+(i*16)+4]=READY;
			endif;
			i = i + 1;
		endwhile;
		R0 = 0;
		return;
	endif;
endif;
//-------------------------------------

//---------ACQUIRE DISK(final version)-
if(funcNum == ACQUIRE_DISK) then
	while ([DISK_STATUS_TABLE] == 1) do
		[PROCESS_TABLE + (currPID * 16) + 4] = WAIT_DISK;
		backup;
		call MOD_5;
		restore;
	endwhile;
	[DISK_STATUS_TABLE] = 1;	//acquire disk
	[DISK_STATUS_TABLE + 4] = currPID;	//set PID field
	return;
endif;
//-------------------------------------
