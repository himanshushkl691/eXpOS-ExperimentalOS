//load library
loadi(63,13);
loadi(64,14);

//load INIT program
loadi(65,7);
loadi(66,8);

//load INT_10 module
loadi(22,35);
loadi(23,36);

//load INT_7 module
loadi(16,29);
loadi(17,30);

//load timer interrupt
loadi(4,17);
loadi(5,18);

//load exception handler
loadi(2,15);
loadi(3,16);

//page table entry
PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

//library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//heap
[PTBR + 4] = 78;
[PTBR + 5] = "0110";
[PTBR + 6] = 79;
[PTBR + 7] = "0110";

//code
[PTBR + 8] = 65;
[PTBR + 9] = "0100";
[PTBR + 10] = 66;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//stack
[PTBR + 16] = 76;
[PTBR + 17] = "0110";
[PTBR + 18] = 77;
[PTBR + 19] = "0110";

//pid
[PROCESS_TABLE + 16 + 1] = 1;

//status
[PROCESS_TABLE + 16 + 4] = CREATED;

//user area page number
[PROCESS_TABLE + 16 + 11] = 80;

//user stack pointer
[PROCESS_TABLE + 16 + 13] = 8*512;

//kernel stack pointer
[PROCESS_TABLE + 16 + 12] = 0;

//ptbr
[PROCESS_TABLE + 16 + 14] = (PAGE_TABLE_BASE + 20);

//ptlr
[PROCESS_TABLE + 16 + 15] = 10;

[76 * 512] = [65 * 512 + 1];
return;
